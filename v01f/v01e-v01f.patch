diff -u linux-xsched-xiphux/kernel/sched.c linux-xsched-xiphux/kernel/sched.c
--- linux-xsched-xiphux/kernel/sched.c	2004-07-13 01:40:56.889681736 -0400
+++ linux-xsched-xiphux/kernel/sched.c	2004-07-13 21:12:23.451459304 -0400
@@ -98,6 +98,8 @@
 #define rt_timeslice		50		/* 50ms */
 #endif
 
+static unsigned int scaled_rt_timeslice = rt_timeslice;
+
 #ifdef CONFIG_SYSCTL
 static unsigned int base_timeslice = 8;
 #else
@@ -692,10 +694,17 @@
 {
 	int idx, base, delta;
 	unsigned int timeslice;
-	unsigned int bonus_factor, miabl, mtpbl, max;
+	unsigned int bonus_factor, tmp;
 
-	if (rt_task(p))
-		return rt_timeslice;
+	if (rt_task(p)) {
+		if (scaled_rt_timeslice != rt_timeslice) {
+			tmp = scaled_rt_timeslice + timeslice;
+			scaled_rt_timeslice *= rt_timeslice;
+			scaled_rt_timeslice <<= 1;
+			scaled_rt_timeslice /= tmp;
+		}
+		return scaled_rt_timeslice;
+	}
 
 	idx = min(p->prio, rq->min_prio);
 	delta = p->prio - idx;
@@ -705,33 +714,33 @@
 	delta = p->static_prio - idx;
 	timeslice = (base << 1) / (delta + 2);
 
-	timeslice = timeslice * 30 / (60 - USER_PRIO(idx));
+	timeslice *= (30 / (60 - USER_PRIO(idx)));
 
-	timeslice = timeslice * 1000 / HZ;
+	timeslice *= (1000 / HZ);
 	/*
 	 * Kernel threads should get an extra bonus.
 	 */
 	if (p->mm == NULL) {
-		idx = timeslice + rt_timeslice;
-		timeslice *= rt_timeslice;
+		tmp = timeslice + scaled_rt_timeslice;
+		timeslice *= scaled_rt_timeslice;
 		timeslice <<= 1;
-		timeslice = timeslice / idx;
+		timeslice /= tmp;
 	} else if (sched_compute) {
 		timeslice <<= 3;
 	} else if (sched_interactive) {
-		miabl = max_ia_bonus;
-		mtpbl = max_tpt_bonus;
-		bonus_factor = (miabl + mtpbl);
-		max = bonus_factor;
-		bonus_factor -= map_proportion_rnd(SCHED_IA_BONUS_RND(p->interactive_bonus), miabl);
-		bonus_factor -= map_proportion_rnd(p->throughput_bonus, mtpbl);
+		bonus_factor = (max_ia_bonus + max_tpt_bonus);
+		bonus_factor -= map_proportion_rnd(SCHED_IA_BONUS_RND(p->interactive_bonus), max_ia_bonus);
+		bonus_factor -= map_proportion_rnd(p->throughput_bonus, max_tpt_bonus);
 		if (bonus_factor > 0)
-			timeslice += (((max - bonus_factor) / (max)) *
-				(rt_timeslice - timeslice));
+			timeslice += ((((max_ia_bonus + max_tpt_bonus) - bonus_factor) /
+					(max_ia_bonus + max_tpt_bonus)) * (scaled_rt_timeslice - timeslice));
 	}
 
-	if (timeslice > rt_timeslice)
-		timeslice = ((timeslice + rt_timeslice) >> 1);
+	if (timeslice > scaled_rt_timeslice) {
+		tmp = ((timeslice - scaled_rt_timeslice) << 1) / 3;
+		timeslice -= tmp;
+		scaled_rt_timeslice += tmp;
+	}
 	if (timeslice < MIN_TIMESLICE)
 		timeslice = MIN_TIMESLICE;
 
